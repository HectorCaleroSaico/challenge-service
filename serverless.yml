# "org" ensures this Service is used with the correct Serverless Framework Access Key.
org: fenrir
# "app" enables Serverless Framework Dashboard features and sharing them with other Services.
app: challenge-service
# "service" is the name of this project. This will also be added to your AWS resource names.
service: challenge-service

provider:
  name: aws
  runtime: nodejs20.x
  region: us-east-1
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:Query
      Resource: !GetAtt EpisodesMergedTable.Arn
  environment:
    DB_TABLE_NAME: 'EpisodesMerged'
    CACHE_TABLE_NAME: 'cache_service'

build:
  esbuild:
    bundle: true
    minify: false
    exclude:
      - '**/*'
    packages: external
    buildConcurrency: 3
    sourcemap:
      type: linked
      setNodeOptions: true

package:
  individually: true
  patterns:
    - '!**/*'
    - '.build/**'
    - 'node_modules/**'

functions:
  application:
    handler: src/application/handlers/merged.handler
    package:
      include:
        - src/application/handlers/merged.ts
    events:
      #- httpApi:
        #path: fusionados/
        #method: get
      - http:
          path: fusionados/{episodeId}
          method: get

resources:
  Resources:
    EpisodesMergedTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: EpisodesMerged
        AttributeDefinitions:
          - AttributeName: episodeId
            AttributeType: S
        KeySchema:
          - AttributeName: episodeId
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST

        